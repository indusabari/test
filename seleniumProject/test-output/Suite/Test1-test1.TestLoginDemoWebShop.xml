<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="BDC4-D-1SR1N62" ignored="0" name="Test1-test1.TestLoginDemoWebShop" tests="3" failures="0" timestamp="08 Feb 2019 09:58:21 GMT" time="1.237" errors="0">
  <testcase name="@BeforeClass beforemethod" time="0.0" classname="test1.TestLoginDemoWebShop">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeClass annotated beforemethod.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeClass annotated beforemethod.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
... Removed 8 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass beforemethod -->
  <testcase name="@AfterClass aftermethod" time="0.0" classname="test1.TestLoginDemoWebShop">
    <skipped/>
  </testcase> <!-- @AfterClass aftermethod -->
  <testcase name="testDemoWebShopLogin" time="0.0" classname="test1.TestLoginDemoWebShop">
    <skipped/>
  </testcase> <!-- testDemoWebShopLogin -->
  <testcase name="testDemoWebShopLogin" time="0.0" classname="test1.TestLoginDemoWebShop">
    <skipped/>
  </testcase> <!-- testDemoWebShopLogin -->
  <testcase name="testDemoWebShopLogin" time="0.0" classname="test1.TestLoginDemoWebShop">
    <skipped/>
  </testcase> <!-- testDemoWebShopLogin -->
</testsuite> <!-- Test1-test1.TestLoginDemoWebShop -->
